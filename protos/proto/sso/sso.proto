syntax = "proto3";

package auth;

// option go_package = "orenvadi.sso.v1;ssov1";

import "buf/validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// Auth is service for managing permissions and roles.
service Auth {
  //------------------------------------------------------------//
  //                     REFACTOR OLD ONES                      //
  //------------------------------------------------------------//
  //
  rpc RegisterTeacher(RegisterTeacherRequest) returns (RegisterTeacherResponse); //
  rpc RegisterStudent(RegisterStudentRequest) returns (RegisterStudentResponse);

  rpc LoginTeacher(LoginTeacherRequest) returns (LoginTeacherResponse);
  rpc LoginStudent(LoginStudentRequest) returns (LoginStudentResponse);

  rpc UpdateTeacherInfo(UpdateTeacherInfoRequest) returns (UpdateTeacherInfoResponse);
  rpc UpdateStudentInfo(UpdateStudentInfoRequest) returns (UpdateStudentInfoResponse);

  rpc LogoutTeacher(LogoutTeacherRequest) returns (LogoutTeacherResponse);
  rpc LogoutStudent(LogoutStudentRequest) returns (LogoutStudentResponse);

  rpc GetTeacherProfileData(google.protobuf.Empty) returns (GetTeacherProfileDataResponse);
  rpc GetStudentProfileData(google.protobuf.Empty) returns (GetStudentProfileDataResponse);

  //------------------------------------------------------------//
  //                           NEW RPCs                         //
  //------------------------------------------------------------//
  //

  // ----------------TEACHERS

  // at the end of lesson
  rpc GetConfirmCode(GetConfirmCodeRequest) returns (stream GetConfirmCodeResponse);

  rpc GetAttendanceJournal(GetAttendanceJournalRequest) returns (GetAttendanceJournalResponse);

  // ----------------STUDENTS
  // both at the start and the end of lesson
  rpc SubmitTeacherCode(SubmitCodeRequest) returns (SubmitCodeResponse);

  rpc SubmitRoomCode(SubmitCodeRequest) returns (SubmitCodeResponse);

  rpc GetAttendanceLessons(GetAttendanceLessonsRequest) returns (GetAttendanceLessonsResponse);
}

//---
// rpc RegisterTeacher(RegisterTeacherRequest) returns (RegisterTeacherResponse); //
message RegisterTeacherRequest {
  string first_name = 1 [(buf.validate.field).string.min_len = 1]; // First name of the user to register.
  string last_name = 2 [(buf.validate.field).string.min_len = 1]; // Last name of the user to register.
  string patronimic = 3 [(buf.validate.field).string.min_len = 1]; // Last name of the user to register.
  string teacher_login = 4 [(buf.validate.field).string.min_len = 3]; // Last name of the user to register.
  string email = 5 [(buf.validate.field).string.email = true]; // Email of the user to register.
  string password = 6 [(buf.validate.field).string.min_len = 6]; // Password of the user to register.
}

message RegisterTeacherResponse {
  string teacher_id = 1; // User ID of the registered user.
  string access_token = 2; // Auth access token of the logged in user.
  string refresh_token = 3; // Refresh token to refresh expired access token
}

//---
// rpc RegisterStudent(RegisterStudentRequest) returns (RegisterStudentResponse);
message RegisterStudentRequest {
  string first_name = 1 [(buf.validate.field).string.min_len = 1]; // First name of the user to register.
  string last_name = 2 [(buf.validate.field).string.min_len = 1]; // Last name of the user to register.
  string patronimic = 3 [(buf.validate.field).string.min_len = 1]; // Last name of the user to register.
  string student_login = 4 [(buf.validate.field).string.min_len = 3]; // Last name of the user to register.
  string email = 5 [(buf.validate.field).string.email = true]; // Email of the user to register.
  string password = 6 [(buf.validate.field).string.min_len = 6]; // Password of the user to register.
}

message RegisterStudentResponse {
  string student_id = 1; // User ID of the registered user.
  string access_token = 2; // Auth access token of the logged in user.
  string refresh_token = 3; // Refresh token to refresh expired access token
}

//---
// rpc LoginTeacher(LoginTeacherRequest) returns (LoginTeacherResponse);
message LoginTeacherRequest {
  string teacher_login = 1 [(buf.validate.field).string.min_len = 3]; // Email of the user to login.
  string password = 2 [(buf.validate.field).string.min_len = 6]; // Password of the user to login.
}

message LoginTeacherResponse {
  string access_token = 1; // Auth access token of the logged in user.
}

//---
// rpc LoginStudent(LoginStudentRequest) returns (LoginStudentResponse);
message LoginStudentRequest {
  string student_login = 1 [(buf.validate.field).string.min_len = 3]; // Email of the user to login.
  string password = 2 [(buf.validate.field).string.min_len = 6]; // Password of the user to login.
}

message LoginStudentResponse {
  string access_token = 1; // Auth access token of the logged in user.
}

//---
// rpc UpdateTeacherInfo(UpdateTeacherInfoRequest) returns (UpdateTeacherInfoResponse);
message UpdateTeacherInfoRequest {
  string teacher_login = 1 [(buf.validate.field).string.min_len = 3];
  string email = 2 [(buf.validate.field).string.email = true]; // Email of the user to register.
}

message UpdateTeacherInfoResponse {
  bool success = 1;
}

//---
// rpc UpdateStudentInfo(UpdateStudentInfoRequest) returns (UpdateStudentInfoResponse);
message UpdateStudentInfoRequest {
  string student_login = 1 [(buf.validate.field).string.min_len = 3];
  string email = 2 [(buf.validate.field).string.email = true]; // Email of the user to register.
}

message UpdateStudentInfoResponse {
  bool success = 1;
}

//---
// rpc LogoutTeacher(LogoutTeacherRequest) returns (LogoutTeacherResponse);
message LogoutTeacherRequest {
  string token = 1; // Auth token of the user to logout.
}

message LogoutTeacherResponse {
  bool success = 1; // Indicates whether the logout was successful.
}

//---
// rpc LogoutStudent(LogoutStudentRequest) returns (LogoutStudentResponse);
message LogoutStudentRequest {
  string token = 1; // Auth token of the user to logout.
}

message LogoutStudentResponse {
  bool success = 1; // Indicates whether the logout was successful.
}

//---
// rpc GetTeacherProfileData(google.protobuf.Empty) returns (GetTeacherProfileDataResponse);
message GetTeacherProfileDataResponse {
  string first_name = 1;
  string last_name = 2;
  string patronimic = 3;
  string teacher_login = 4;
  string email = 5;
}

//---
// rpc GetStudentProfileData(google.protobuf.Empty) returns (GetStudentProfileDataResponse);
message GetStudentProfileDataResponse {
  string first_name = 1;
  string last_name = 2;
  string patronimic = 3;
  string student_login = 4;
  string email = 5;
}

//---
// rpc GetConfirmCode(GetConfirmCodeRequest) returns (stream GetConfirmCodeResponse);

message GetConfirmCodeRequest {
  string teacher_login = 1;
}

message GetConfirmCodeResponse {
  string code = 1;
}

//---
// rpc GetAttendanceJournal(GetAttendanceJournalRequest) returns (GetAttendanceJournalResponse);
message GetAttendanceJournalRequest {
  google.protobuf.Timestamp date = 1;
}

message GetAttendanceJournalResponse {
  message AttendanceJournalLesson {
    message AttendanceJournalLine {
      int32 number = 1;
      string student_name = 2;
      bool is_attended = 3;
    }

    google.protobuf.Timestamp time_slot = 1;
    string lesson = 2;
    string group = 3;
    repeated AttendanceJournalLine attendanceJournalLines = 4;
  }
  repeated AttendanceJournalLesson attendanceJournalLessons = 1;
}

//---
// rpc SubmitCode(SubmitCodeRequest) returns (SubmitCodeResponse);
message SubmitCodeRequest {
  string code = 1;
}

message SubmitCodeResponse {
  bool success = 1;
}

//---
// rpc GetAttendanceLessons(GetAttendanceLessonsRequest) returns (GetAttendanceLessonsResponse);
message GetAttendanceLessonsRequest {
  google.protobuf.Timestamp date = 1;
}

message GetAttendanceLessonsResponse {
  message AttendanceLessonsLine {
    google.protobuf.Timestamp time_slot = 1;
    string group = 2;
    string subject = 3;
    bool is_attended = 4;
  }

  google.protobuf.Timestamp date = 1;
  repeated AttendanceLessonsLine attendanceLessonsLine = 2;
}
